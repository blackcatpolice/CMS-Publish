@model System.Data.DataTable
@functions{
    //    public string user, passwd, ip, cp, sn;
    //    protected void GetCustomPath_Click(object sender, EventArgs e)
    //    {
    //        Object obj = new object();
    //        try
    //        {
    //            obj = ServicesHelper.InvokeWebSer(siteUrl.Text.Trim() + ServicesHelper.siteGroupService,
    //           "SiteGroup",  // 欲调用的WebService的命名空间(如你已经引用,则为引用进入的命名空间)
    //            "SiteGroupFunc",   // 欲调用的WebService的类名（不包括命名空间前缀）
    //             "GetCustomPath",    // 欲调用的WebService的方法名
    //              new object[] { });
    //            NewcustomPath.Text = obj.ToString();
    //            obj = ServicesHelper.InvokeWebSer(siteUrl.Text.Trim() + ServicesHelper.siteGroupService,
    //          "SiteGroup",  // 欲调用的WebService的命名空间(如你已经引用,则为引用进入的命名空间)
    //           "SiteGroupFunc",   // 欲调用的WebService的类名（不包括命名空间前缀）
    //            "GetSiteName",    // 欲调用的WebService的方法名
    //             new object[] { });
    //            siteName.Text = obj.ToString();
    //            this.table_ul.Style.Add("display", "block");
    //            this.add_table.Style.Add("display", "none");
    //            function.Script(this, "ShowDiv();");
    //        }
    //        catch
    //        {
    //            Page.ClientScript.RegisterStartupScript(this.GetType(), "", "alert('获取失败，请检查信息是否填写正确!');", true);
    //            this.table_ul.Style.Add("display", "none");
    //            this.add_table.Style.Add("display", "block");
    //            function.Script(this, "ShowDiv();");
    //        }
    //    }
    //    protected void EGV_RowCommand(object sender, GridViewCommandEventArgs e)
    //    {
    //        switch (e.CommandName)
    //        {
    //            case "Edit2":
    //                EGV.EditIndex = Convert.ToInt32(e.CommandArgument as string);
    //                EGV.Columns[4].Visible = true;
    //                break;
    //            case "Save":
    //                string[] s = e.CommandArgument.ToString().Split(':');
    //                Update(DataConvert.CLng(s[0]), s[1]);
    //                EGV.EditIndex = -1;
    //                EGV.Columns[4].Visible = false;
    //                break;
    //            case "Del2":
    //                int id = DataConvert.CLng(e.CommandArgument as string);
    //                SqlHelper.ExecuteScalar(CommandType.Text, "Delete From " + tableName + " Where ID = " + id);
    //                EGV.Columns[4].Visible = false;
    //                break;
    //            default: break;
    //        }
    //        DataBind();
    //    }
    //    private void Update(int rowNum, string id)
    //    {
    //        GridViewRow gr = EGV.Rows[rowNum];
    //        ip = ((TextBox)gr.FindControl("eSiteUrl")).Text.Trim();
    //        user = ((TextBox)gr.FindControl("eSiteUser")).Text.Trim();
    //        passwd = ((TextBox)gr.FindControl("eSitePasswd")).Text.Trim();
    //        passwd = EncryptHelper.AESEncrypt(passwd);
    //        cp = ((TextBox)gr.FindControl("eCustomPath")).Text.Trim();
    //        sn = ((TextBox)gr.FindControl("eSiteName")).Text.Trim();
    //        SqlParameter[] sp = new SqlParameter[] {
    //        new SqlParameter("ID",id),
    //            new SqlParameter("SiteUser",user),
    //            new SqlParameter("SitePasswd",passwd),
    //             new SqlParameter("SiteUrl",ip),
    //               new SqlParameter("SiteName",sn),
    //              new SqlParameter("CustomPath",cp)
    //        };
    //        SqlHelper.ExecuteScalar(CommandType.Text, "Update " + tableName + " set siteUser=@SiteUser,SitePasswd=@SitePasswd,SiteUrl=@SiteUrl,SiteName=@SiteName,customPath=@CustomPath Where ID=@ID", sp);
    //    }
    //    protected void EGV_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    //    {
    //        EGV.EditIndex = -1;
    //        EGV.Columns[4].Visible = false;
    //        DataBind();
    //    }
    //    protected void backBtn_Click(object sender, EventArgs e)
    //    {
    //        this.table_ul.Style.Add("display", "none");
    //        this.add_table.Style.Add("display", "block");
    //        function.Script(this, "ShowDiv();");
    //    }

}
@section head{ <title>集群配置</title>}
@section content{
    @Call.SetBread(new Bread[] {
		new Bread("{admin}"),
        new Bread("Default","站群中心"),
        new Bread() {url=Context.Request.RawUrl(), text="[<a id='add_s' href='ServerAdd'>添加服务器集群</a>]",addon="" }}
		)
    <div id="site_main" class="list_choice">
    <div id="tab3">
    <div class="w-100">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>网址</th>
                    <th>网站名称</th>
                    <th>用户名</th>
                    <th>密码</th>
                    @*<th>后台路径</th>*@
                    <th>操作</th>
                </tr>
            </thead>
            @foreach (DataRow dr in Model.Rows)
            {
                <tr>
                    <td>@dr["ID"]</td>
                    <td><a href="@dr["SiteUrl"]" target="_blank" title="">@dr["SiteUrl"]</a></td>
                    <td>@dr["SiteName"]</td>
                    <td>@dr["SiteUser"]</td>
                    <td>@dr["SitePasswd"]</td>
                    @*<td>@dr["CustomPath"]</td>*@
                    <td>
                        <a href="ServerAdd?ID=@dr["ID"]"><i class="zi zi_pencilalt" title="修改"></i></a>
                        <a href="javascript:;" onclick="mvcpage.del({ url: 'API?action=server_del',ids:'@dr["ID"]', confirm: '确定要删除吗', after: function () { location = location; }});"><i class="zi zi_trashalt" title="删除"></i></a>
                    </td>
                </tr>
            }
        </table>
    </div>
 }
@section script{ 
<script type="text/javascript" >
    function HidDiv() {
        $("#fileup_div").hide();
    }
    function ShowDiv() {
        $("#fileup_div").show();
    }
</script>

}
